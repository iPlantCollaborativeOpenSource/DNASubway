<%once>
   use DNALC::Pipeline::Chado::Utils ();
   use DNALC::Pipeline::Config ();
   use DNALC::Pipeline::App::ProjectManager ();
   use DNALC::Pipeline::Utils qw(random_string);
   use Data::Dumper;
   use Apache2::Upload; 
   use Gearman::Client ();
</%once>
<%init>
   #print STDERR Dumper(\%ARGS), $/;
   my $msg;
   my $pid = $r->param("projectname");
   my $config = DNALC::Pipeline::Config->new->cf('PIPELINE');
   my $apollo = $config->{APOLLO_HEADLESS};
   my $pmanager = DNALC::Pipeline::App::ProjectManager->new($pid);
   unless ($pmanager->project) {
         $msg = "Project not found!";
   } else {
	   my $wd = $pmanager->work_dir;
	   my $upload = $r->upload("apollo"); # apollo
	   my $name = $upload->filename;
	   my $fh = $upload->fh; my $data;
	   my $path = $wd . '/uploaded'.random_string().'.xml';
	   open(OUTPUT, "> ". $path);	   
	   while (my $line = <$fh>) { print OUTPUT $line; }
	   close(OUTPUT);
	   print STDERR "Uploaded file: ", $path, $/;
       my $cutil = DNALC::Pipeline::Chado::Utils->new();			  
       $cutil->profile( $pmanager->chado_user_profile );
	   my $conf_file = $cutil->create_chado_adapter($config->{APOLLO_USERCONF_DIR});
	   my $command = "-H -C $conf_file -G user -f '$path' -i game -o chadoDB";
	   
	   my $client = Gearman::Client->new;
	   my $sx = $client->job_servers('127.0.0.1');
       my $h = $client->dispatch_background( apollo_insert => $command );

	   $msg = 'ok';	   
   }
</%init>
<%flags>
   inherit => undef
</%flags>
<% $msg %>
%# vim: ft=mason
