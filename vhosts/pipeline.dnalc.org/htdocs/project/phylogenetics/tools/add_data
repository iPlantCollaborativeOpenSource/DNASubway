
<div id="conbody">
% if (@err) {
	<div style="display:block; color: red; font-weight: bold;" id="error_list">
%	foreach (@err) {
		<div><% $_ %></div>\
%	}
	</div>
% }

% if ($added) {
<script type="text/javascript">
	top.phy.set_status("phy_trim", "not-processed");
	top.phy.close_window('data');
</script>
% }
	<form id="forma1" method="POST" enctype="multipart/form-data">
	<input type="hidden" id="step" value="6" />

	<!--<div id="title">Upload / Import Sequence</div>-->
	<div class="con_BL_infoText">Please select one for upload or import a sequence</div>

	<!-- UPLOAD -->
	<div class="con_BL_subTitle">Upload sequence(s)</div>
	<div class="con_BL_menu_box"> 
		<div class="con_BL_menu_box1">
			<input class="conRadiobox_align" type="radio" name="seq_src" id="seq_src_upload" 
				<% $seq_src eq "upload" ? "checked=\"checked\"" : ""%> value="upload" onchange="phy.select_source(this.value)" />
			Upload <a href="#">AB1</a> or <a href="http://en.wikipedia.org/wiki/FASTA_format#Format">FASTA formated</a> files
		</div>                     
	</div>
	<div class="con_BL_menu_box" id="upload_inputs">
		<input class="conStylized_input1" type="file" multiple id="seq_file" name="seq_file" 
			onchange="$('seq_src_upload').checked = true;" />
		<input class="" type="button" id="upload_data" name="upload_data" value="Upload" 
			onclick="phy.add_data()" />
	</div>

	<!-- PASTE -->
	<div class="con_BL_subTitle">Enter sequence(s)</div>
	<div class="con_BL_menu_box"> 
		<div class="con_BL_menu_box1">
			<input class="conRadiobox_align" type="radio" name="seq_src" id="seq_src_paste" 
				value="paste" <% $seq_src eq "paste" ? "checked=\"checked\"" : ""%> onchange="phy.select_source(this.value)" />
			&nbsp; Enter a new sequence in FASTA format
		</div>                     
	</div>
	<div class="con_BL_menu_box" id="paste_inputs">
		<div class="con_BL_menu_box2">Please type or copy &amp; paste your sequence(s):</div>
		<textarea class="conStylized_input2" name="sequence" id="sequence" rows="4" cols="30"
			onfocus="$('seq_src_paste').checked = true;" onchange="$('seq_src_paste').checked = true;" ><% $sequence|html %></textarea>
		<div align="left"><input type="button" value="Add sequence(s)" onclick="phy.add_data()" /></div>
	</div>

	<!-- IMPORT -->
	<div class="con_BL_subTitle">Import sequence</div>
	<div class="con_BL_menu_box"> 
		<div class="con_BL_menu_box1">
			<input class="conRadiobox_align" type="radio" name="seq_src" id="seq_src_genbank" disabled="disabled"
				<% $seq_src eq "genebank" ? "checked=\"checked\"" : ""%>
				value="genbank" onclick="phy.select_source('import')" /> &nbsp; Import sequence from GenBank
		</div>
% if ($proj->type ne "protein") {
		<div class="con_BL_menu_box1">
			<input class="conRadiobox_align" type="radio" name="seq_src" id="seq_src_bold" disabled="disabled"
				value="bold" onclick="phy.select_source('import')" /> &nbsp; Import sequence from BOLD
		</div>
		<div class="con_BL_menu_box1">
			<input class="conRadiobox_align" type="radio" name="seq_src" id="seq_src_dnalc"
				value="dnalc" onclick="phy.select_source('importdnalc')" /> &nbsp; Import sequence/trace from DNALC
		</div>                     
% }
	</div>
	<div class="con_BL_menu_box" id="import_inputs" style="">
		<div class="con_BL_menu_box2">Please enter accession/sequence ID:</div>
			<input class="conStylized_input3"  name="accession" id="accession" value="" disabled="disabled"/>
		<div align="left"><input type="button" value="Import" disabled="disabled" /></div>
	</div>
	<div id="dnalc_container" style="clear:both;"></div>
	</form>
</div>
%#------------------------------------------------------------
<%args>
	$pid => 0
	$seq_src => ''
	$sequence => ''
	$d => ''
</%args>
%#------------------------------------------------------------
<%once>
	use DNALC::Pipeline::Utils qw/nicebasepairs random_string/;
	use DNALC::Pipeline::Config ();
	use DNALC::Pipeline::App::Utils ();
	use DNALC::Pipeline::App::Phylogenetics::ProjectManager ();
	use Carp;
	use IO::File ();
	use File::Basename qw(basename dirname);
	use Data::Dumper;
</%once>
%#------------------------------------------------------------
<%init>
	$r->content_type("text/html");
	my $s = $m->session->{pipeline};
	
	my @err = ();
	my @messages = ();
	
	my $added = 0;
	my $cf = DNALC::Pipeline::Config->new;
	my $pcf = $cf->cf('PIPELINE');
	
	my $pm = DNALC::Pipeline::App::Phylogenetics::ProjectManager->new($pid);
	my $proj = $pm->project;
	unless ($proj || $s->{user_id} != $proj->user_id) {
		push @err, "Project not found!";
	}
	
	if (!@err && $r->method eq "POST") {

		#print STDERR "seq_src = ", $seq_src, $/;
		my @files2process = ();

		if ($seq_src eq "paste" && !defined $sequence) {
			push @err, "Sequence is missing!", $/;
		}


		unless (@err) {
			if ($seq_src eq "paste") {

				my $seq = $sequence;
				$sequence =~ s/^\s+//;
				my $file2process = $pcf->{upload_dir} . "/" . random_string(7,7);
				my $out = IO::File->new;
				if ($out->open($file2process, "w")) {
					print $out $seq;
					undef $out;
					push @files2process, {path => $file2process, type => "fasta"};
				}
			}
			elsif ($seq_src eq "upload") {

				my $st = DNALC::Pipeline::App::Utils->save_upload_files( {
							u => [$r->upload("seq_file")],
							alphabet => $proj->type =~ /protein/i ? "protein" : "dna",
						});

				#print STDERR Dumper($st), $/;

				if ($st->{status} eq "fail") {
					push @err, "Unable to upload file(s): ". $st->{message};
					for (@{$st->{excluded_files}}) {
						push @err, $_->{filename} . " " . $_->{msg};
					}
				}
				else {
					push @files2process, @{$st->{files}};
					if ($st->{excluded_files}) {
						for (@{$st->{excluded_files}}) {
							push @messages, $_->{msg} . ": [" . $_->{filename} . "]";
						}
					}
				}
			} # end if upload
			elsif ($seq_src eq "dnalc" && $d ne "") {
				my $cf = DNALC::Pipeline::Config->new->cf('PHYLOGENETICS');
				my $base_dir = $cf->{DNALC_TRANSFER_DIR} || "/tmp";
				my $temp_dir = $base_dir . '/' . $d;
				if (-d $temp_dir) {
					my @files = <$temp_dir/*>;
					push @files2process, map {
								{type => "trace", filename => basename($_), path => $_}
							} @files;
				}
			}
		}
		
		# add data
		unless (@err) {
			for my $ftype (qw/fasta trace/) {
				my @_files = grep {$_->{type} =~ /^$ftype$/i} @files2process;
				next unless @_files;
				my $st = $pm->add_data({
						source => "init",
						files => \@_files,
						type => $ftype,
						existing_project => 1, # must be set every time we add data to an existing project
					});
				$added += $st->{seq_count};
				if (@{$st->{errors}}) {
					push @err, @{$st->{errors}};
					print STDERR Dumper($st), $/;
				}
			}

			# do we have at least one sequence added?
			if ($added) {				
				# we want to remove the temporary directory created for while transfering the data from dnalc
				if ($seq_src eq "dnalc") {
					my $dir = dirname($files2process[0]->{path});
					if (-d $dir) {
						my $done = $dir . '/.done';
						unlink $done if -f $done;
						rmdir $dir;
					}
				}
			}
			else {
				push @err, "Unable to add sequences!";
			}
		}
	}
</%init>
%#------------------------------------------------------------
<%attr>
	js => ['prototype-1.6.1.js', 'phylogenetics.js']
</%attr>
<%filter>
	s/^\s+/ /gm;
</%filter>
