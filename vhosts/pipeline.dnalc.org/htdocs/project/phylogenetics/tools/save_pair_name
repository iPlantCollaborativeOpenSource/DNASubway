{status:'<% $status|js%>', message:'<% $msg |js%>'}
<%args>
	$pid => 0
	$pair_id => 0
	$name => ''
</%args>
<%once>
	use DNALC::Pipeline::App::Phylogenetics::ProjectManager ();
	use DNALC::Pipeline::CacheMemcached ();
	use DNALC::Pipeline::Config();
</%once>
<%init>
	my ($status, $msg) = ("error", "");
	$pid =~ s/\D+//g;
	
	#1. make sure the user is logged in (session is active)
	my $s = $m->session->{pipeline};
	my $now = time();
	if (!$s->{logged_in} || ($now - $s->{last} > 3600)) {
		print '{"status":"failed", "message":"Your session expired. Please login again."}';
		return;
	}
	
	#2. make sure the project of this pair belongs to the right user
	my $pair = DNALC::Pipeline::Phylogenetics::Pair->retrieve($pair_id);
	my $proj = $pair->project_id if $pair;
	
	if (!$proj || $s->{user_id} != $proj->user_id) {
		print '{"status":"failed", "message":"Project not found!"}';
		return;
	}
	
	#3. Ensure the name is less than 128 chars
	if (length($name) > 128){
		print '{"status":"failed", "message":"Pair name must be less than 128 characters"}';
		return;
	}
	
	#4. Ensure there are no spaces or special characters in the name, if they exist, strip them away
	#   (allowed characters are dashes, underscores, periods, letters and numbers)
	$name =~ s/[^-_.\w\d]//g;
	
	#5. Update DB with new pair name
	$pair->name($name);
	if ($pair->update) {
		$status = "success";
	}
	
</%init>

<%flags>
	inherit => undef
</%flags>