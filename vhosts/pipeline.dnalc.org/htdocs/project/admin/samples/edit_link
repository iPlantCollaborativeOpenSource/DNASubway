<%args>
	$op => ''
	$sid => 0
	$lid => 0
	$link_name => ''
	$link_url => ''
	$link_segment => ''
	$link_start => ''
	$link_stop => ''
	$link_type => ''
</%args>
%#------------------------------------------------------------------------------
<%once>
	use DNALC::Pipeline::Sample ();
	use DNALC::Pipeline::SampleLink ();
	use Regexp::Common qw/URI/;
</%once>
%#------------------------------------------------------------------------------
%#------------------------------------------------------------------------------
<%init>
my $s = $m->session->{pipeline};
my $err = 0;
my $sample = $sid ? DNALC::Pipeline::Sample->retrieve($sid) : 0;
unless ($sample) {
	$m->comp('/_message_add', "No sample was found for sample id = $sid!", 'error');
	$m->redirect('./index.html');
}
if ($op eq 'remove' && $lid) {
	my ($link) = DNALC::Pipeline::SampleLink->search(sample_id => $sid, link_id => $lid);
	if ($link) {
		$link->delete;
		$m->comp('/_message_add', "Link removed.");
	} 
	else {
		$m->comp('/_message_add', "Link not found.", 'error');
	}
	$m->redirect('./edit_sample.html?sid=' . $sid);
}


unless ($link_url && $link_url =~ /$RE{URI}{HTTP}/) {
	$m->comp('/_message_add', "Link url is missing or not well formatted", 'error');
	$err = 1;
}

if (!$link_name) {
	$m->comp('/_message_add', "Link name is missing.", 'error');
	$err = 1;
}

unless ( defined $link_segment) {
	$m->comp('/_message_add', "Link segment is missing.", 'error');
	$err = 1;
}

unless ( $link_start) {
	$m->comp('/_message_add', "Link start is missing.", 'error');
	$err = 1;
}
unless ( $link_stop) {
	$m->comp('/_message_add', "Link stop is missing.", 'error');
	$err = 1;
}

unless ( $link_stop > $link_start) {
	$m->comp('/_message_add', "Link stop is smaller then Link start.", 'error');
	$err = 1;
}

unless ( $link_stop) {
	$m->comp('/_message_add', "Browser type is missing.", 'error');
	$err = 1;
}

if ($err) {
	$s->{link_name} = $link_name;
	$s->{link_url} = $link_url;
	$s->{link_segment} = $link_segment;
	$s->{link_start} = $link_start;
	$s->{link_stop} = $link_stop;
	$s->{link_type} = $link_type;
}
else {
	my $l = $sample->add_to_links({
		sample_id => $sid,
		link_name => $link_name,
		link_url => $link_url,
		link_segment => $link_segment,
		link_start => $link_start,
		link_stop => $link_stop,
		link_type => $link_type,
	});
	if ($l) {
		for (qw/link_name link_url link_segment link_start link_stop link_type/) {
			delete $s->{$_};
		}
		$m->comp('/_message_add', "Link added successfully. ");
	}
}

$m->redirect('./edit_sample.html?sid=' . $sid);

</%init>
