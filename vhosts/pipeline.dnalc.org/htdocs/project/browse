
<div id="container_rightContent">
<div id="container_pageTitle"> public projects</div>
<br clear="all"/>
%	if (exists $m->session->{messages}) {
<div id="error_list" style="display:none;">	
<& /_messages &>
</div>
%	}
<div id="conProject_tableHolder">
  <table class="conProject_table" summary="">
  <tr>
    <th width="32" scope="col">ID</th>
    <th width="60" scope="col"><a href="<& /_realurl &>/1/date/<% $sort eq "date" && $dir eq "desc" ? "asc" : "desc" %>">Date</a></th>
    <th width="200" scope="col"><a href="<& /_realurl &>/1/title/<% $sort eq "title" && $dir eq "asc" ? "desc" : "asc" %>">Project Title</a></th>
	<th width="250" scope="col">Description</th>
    <th width="200" scope="col"><a href="<& /_realurl &>/1/organism/<% $sort eq "organism" && $dir eq "asc" ? "desc" : "asc" %>">Organism</a></th>
    <th width="120" scope="col"><a href="<& /_realurl &>/1/owner/<% $sort eq "owner" && $dir eq "asc" ? "desc" : "asc" %>">Owner</a></th>
  </tr>
% for (@projects) {
%	my $created = DNALC::Pipeline::App::Utils->format_datetime($_->created, undef, "%m/%d/%Y");
%	my $color = "#c1272d";
%	my $uri = "/project/console.html?pid=" . $_->id;
%	if ($_->{project_type} eq "target") {
%		$uri = "/project/target/view?tid=" . $_->id;
%		$color = "#fdba3e"; #blue = "#3953A4"
% 	}
%	my $description = break_long_text($_->description, 35);
<tr>
	<td style="background-color: <% $color %>;"><% $_->id %></td>
	<td><% $created %></td>
	<td><a href="<% $uri %>"><%$_->name |html%></a></td>
	<td><% $description |html %></td>
	<td><% $_->organism %>, <% $_->common_name %></td>
	<td><% $_->{full_name} %></td>
	<!--<td><% $_->user_id %></td>-->
</tr>
% }

</table>

<& '/_pager', cur=>$page, pages => $pages, 
	suffix => "/$sort/$dir", prefix => '/project/browse/' &>

</div>
<div class="clear"> </div>
</div><!--END of ID container_rightContent-->  

%#--------------------------------------------------------
<%args>
	$page => 1
	$sort => 'date'
	$dir => 'desc'
</%args>
<%once>
	use DNALC::Pipeline::MasterProject ();
	use DNALC::Pipeline::Project ();
	use DNALC::Pipeline::TargetProject ();
	use DNALC::Pipeline::User ();
	use DNALC::Pipeline::Config ();
	use DNALC::Pipeline::Utils qw(random_string);
	use DNALC::Pipeline::App::Utils ();
	use DNALC::Pipeline::Utils qw(break_long_text);
	
	#use Switch 'Perl6';
	
	use Data::Dumper;

	my %clades = (
			d => 'Eudicotyledons',
			m => 'Monocotyledons',
			u => 'Unknown',
			o => 'Other'
		);
	my %sort_map = (
			date => 'mp.mp_id',
			title => 'name',
			organism => 'organism',
			owner => 'u.name_last',
	);

	my $epp = 10;
</%once>

<%init>
#my $pcf = DNALC::Pipeline::Config->new->cf('PIPELINE');
$r->content_type('text/html');

$m->session->{pipeline} ||= {};
my $s = $m->session->{pipeline};

if ($r->uri =~ /\/(\d+)\/?(date|title|organism|owner)?\/?(asc|desc)?$/) {
#if ($r->uri =~ /\/(\d+)\//) {
	$page = $1;
	$sort = $2;
	$dir  = $3;
}

unless ($page =~ /^\d+$/) {
	$page = 1;
}

unless ($dir && $dir =~ /^(?:asc|desc)$/) {
	$dir = "desc";
}

unless ($sort_map{$sort}) {
	$sort = "date";
}

my $order_by = "$sort_map{$sort} $dir";

my $pager = DNALC::Pipeline::MasterProject->pager($epp, $page);
my @projects = grep { defined $_ } map {
				my $pid = $_->{project_id};
				my $pclass = 'DNALC::Pipeline::Project';
				if ($_->project_type eq "target") {
					$pclass = 'DNALC::Pipeline::TargetProject';
				}
				#my $u = DNALC::Pipeline::User->retrieve($_->user_id);
				my $p = $pclass->retrieve($pid);
				if ($p) {
					$p->{project_type} = $_->project_type;
					$p->{full_name} = $_->{full_name};
				}
				$p;
			} $pager->get_public_sorted({order_by => $order_by});

my $pages = int($pager->total_entries/$epp) + ($pager->total_entries % $epp > 0 ? 1 : 0);

</%init>

%#---------------------------------
<%attr>
	js => []
</%attr>
%#---------------------------------
<%method title>\
Public projects -
</%method>\
%#---------------------------------

%# vim: ft=mason
