
<div id="container_rightContent">
	<div id="container_pageTitle"> my projects</div>
	<br clear="all"/>
%	if (exists $m->session->{messages}) {
<div id="message_list" style="display:none;">	
<& /_messages &>
</div>
%	}
	<div id="conProject_tableHolder">
% if (@projects) {
  <table class="conProject_table" summary="My projects">
  <tr>
    <th width="32" scope="col">ID</th>
    <th width="60" scope="col">Date</th>
    <th width="200" scope="col">Project Title</th>
	<th width="250" scope="col">Description</th>
    <th width="200" scope="col">Organism</th>
    <th scope="col">Status</th>
	<th scope="col">&nbsp;</th>
  </tr>
% for (@projects) {
%	my $created = DNALC::Pipeline::App::Utils->format_datetime($_->created, undef, "%m/%d/%Y");
%	my $color = "#c1272d";
%	my $uri = "/project/console.html?pid=" . $_->id;
%	if ($_->{project_type} eq "target") {
%		$uri = "/project/target/view?tid=" . $_->id;
%		$color = "#fdba3e"; #blue = "#3953A4"
% 	}
%	my $description = break_long_text($_->description, 35);
<tr>
	<td style="background-color: <% $color %>;"><% $_->id %></td>
	<td><% $created %></td>
	<td><a href="<% $uri %>"><%$_->name |html%></a></td>
	<td><% $description |html %></td>
	<td><% $_->organism %>, <% $_->common_name %></td>
%#	<td><% $_->can("clade") ? $clades{$_->clade} : $_->type eq "d" ? "DNA" : "Protein" %></td>
	<td><% $_->{public} ? "public" : "private" %></td>
	<td><a href="/project/remove?id=<% $_->{master_project_id} %>" onclick="return confirm('Remove this project?')"><img src="/images/v2/Trash_Can.png" style="border: none;" alt="[remove project]"/></a></td>
</tr>
% }
</table>

<& '/_pager', cur=>$page, pages => $pages, 
	suffix => '', prefix => '/project/browsemy/' &>
% } else {
	<p>&nbsp;</p>
	<p>You have no projects, yet. To start a project, click one of the squares on the left.</p>
% }
<p>&nbsp;</p>
	</div>
<div class="clear"> </div>
% if ($s->{warn_guest}) {
<div id="message_list" style="display:none;">
	<p>Guest accounts are temporary.</p>
	<p>&nbsp;</p>
	<p>Guest users cannot use the Red Line's FGenesH gene predictor on uploaded sequences.</p>
</div>
% 	delete $s->{warn_guest};
%}
</div><!--END of ID container_rightContent-->  

%#--------------------------------------------------------
<%args>
	$page => 1
	$sort => 'created desc'
</%args>
<%once>
	use DNALC::Pipeline::MasterProject ();
	use DNALC::Pipeline::Project ();
	use DNALC::Pipeline::TargetProject ();
	use DNALC::Pipeline::User ();
	use DNALC::Pipeline::Config ();
	use DNALC::Pipeline::Utils qw(random_string);
	use DNALC::Pipeline::App::Utils ();
	use DNALC::Pipeline::Utils qw(break_long_text);

	use Data::Dumper;

	my %clades = (
			d => 'Eudicotyledons',
			m => 'Monocotyledons',
			u => 'Unknown',
			o => 'Other'
		);

	my $epp = 10;
</%once>

<%init>
#my $pcf = DNALC::Pipeline::Config->new->cf('PIPELINE');
$r->content_type('text/html');

$m->session->{pipeline} ||= {};
my $s = $m->session->{pipeline};

if ($r->uri =~ /\/(\d+)$/) {
	$page = $1;
}

unless ($page =~ /^\d+$/) {
	$page = 1;
}

my $pager = DNALC::Pipeline::MasterProject->pager($epp, $page);

my @projects = grep { defined $_ } map {
				my $pid = $_->{project_id};
				my $pclass = 'DNALC::Pipeline::Project';
				if ($_->project_type eq "target") {
					$pclass = 'DNALC::Pipeline::TargetProject';
				}
				my $p = $pclass->retrieve($pid);
				if ($p) {
					$p->{master_project_id} = $_->id;
					$p->{project_type} = $_->project_type;
					$p->{public} = $_->public;
				}
				$p;
			} $pager->get_mine_sorted({user_id => $s->{user_id}});

my $pages = int($pager->total_entries/$epp) + ($pager->total_entries % $epp > 0 ? 1 : 0);

</%init>

%#---------------------------------
<%attr>
	js => []
</%attr>
%#---------------------------------
<%method title>\
My projects -
</%method>\
%#---------------------------------

%# vim: ft=mason
