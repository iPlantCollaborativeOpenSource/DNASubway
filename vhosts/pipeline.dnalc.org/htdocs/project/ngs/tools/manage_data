<div class="container_data1">
	<div id="container_data_line">&nbsp;</div>

	
	<div>
		<a href="./add_data?pid=<% $proj->id %>" style="text-decoration:none;"><input type="button" value="Add Data" /></a><input type="hidden" id="pid" value="<% $pid |html%>"/>
	</div>

%#data = <% ref($data)%>

<table id="jobs_table">
	<thead>
		<tr>
			<th>File</th>
			<th>Size</th>
			<th>Last modified</th>
			<th>QC</th>
			<th>&nbsp;</th>
		</tr>
	</thead>
% while (my $f = $data->next) {
%	next unless $f->is_input;
%#	TODO: need a better way of assessing if a file is fastq or not
%#
%	my $is_fastq = $f->file_path =~ /\.fastq$/;
	<tr>
		<td title="<% $f-> file_path |html %>"><% $f->file_name |html%></td>
		<td><small><% $f->file_size ? nicebytes($f->file_size) : '' %></small></td>
		<td><small><% $f->last_modified %></small></td>
%	if ($is_fastq) {
		<& .fastq_options, f =>$f, pid => $pid, pm => $pm &>
%	} else {
		<td colspan="2">&nbsp;</td>
%	}
	</tr>
% }
</table>

<%def .fastq_options>
<%args>
	$f => undef
	$pid => undef
	#$mc_key => ""
	$pm => undef
</%args>
<%init>
	return "" unless $f && $pm;
	my $qc_report = $f->qc_file_id ? $m->comp("../../.comp/filepath_to_web", file => $f->qc_report, just_return => 1) : 0;
	my $trimmed_file = $f->trimmed_file;

	my $mc_key = sprintf("ngs-%d-%s-%d", $pm->project->id, "ngs_fxtrimmer", $f->id);
	my $is_trimming = $pm->{_mc}->get($mc_key);

	my $mc_key_qc = sprintf("ngs-%d-%s-%d", $pm->project->id, "ngs_fastqc", $f->id);
	my $is_qcing = $pm->{_mc}->get($mc_key_qc);

</%init>
		<td id="qcst_<% $f %>"><% $qc_report ? "<a href='$qc_report'>View</a>" : $is_qcing ? 'Running' : '<a href="javascript:;" onclick="javascript:ngs.do_qc(' . $f->id . ');">Run</a>'%></td>
%	if ($qc_report) {
%#		<td title="<% $trimmed_file ? $trimmed_file->file_path : "do trimm" %>"><% $trimmed_file ? "yes" : "<a href=\"javascript:do_trim()\">Trim" %></td>
		<td><%# $trimmed_file ? "yes" : $is_trimming ? "trimming pending" : "<a href=\"javascript:ngs.do_trim(" . $f->id . ");\">do Trim" %></td>
%	} else {
		<td>&nbsp;</td>
%	}
</%def>
%#-----------------------------------------------------------------
<%args>
	$pid => 0
</%args>
<%once>
	use Data::Dumper;
	use DNALC::Pipeline::Utils qw(clean_query nicebytes);
	use DNALC::Pipeline::App::NGS::ProjectManager ();
	use DNALC::Pipeline::User ();
</%once>
<%init>

	$m->session->{pipeline} ||= {};
	my $s = $m->session->{pipeline};

	#my $path_info = $r->path_info;
	if ($r->path_info =~ /\/(\d+)$/) {
		$pid = $1;
	}

	my $pm = DNALC::Pipeline::App::NGS::ProjectManager->new({project => $pid, debug => 0});

	my $proj = $pm->project;

	# project's owner
	my $is_owner = $s->{user_id} == $proj->user_id if $proj;
	my $data = $pm->data;
	
</%init>
