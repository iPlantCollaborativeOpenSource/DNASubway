<div id="content">
% if ($app) {
<div>New job using application <strong><% $app %></strong>:</div>
	<p>
%#	--------------------------- DEBUG ---------------------------------------
		<& ./.comp/app_debug, app => $app &>
%#	--------------------------- /DEBUG --------------------------------------
		
		<form method="post">
		<table>
			<tbody id="app_info">
				<tr>
					<td colspan="2" style="font-weight:bold;background-color: #eee;">Job options</td>
				</tr>
				<tr>
					<td><sup>*</sup>Job name:</td>
					<td><input type="text" id="jobName" name="jobName" value="<% $form->{jobName} |html %>" /></td>
				</tr>
				<tr style="background: #ccc;">
					<td>Requested time:</td>
					<td><input type="text" id="requestedTime" name="requestedTime" value="<% $form->{requestedTime} || q{0:15:00}|html %>" /></td>
				</tr>
				<tr style="background: #ccc;">
					<td>Memory:</td>
					<td><input type="text" id="memory" name="memory" value="<% $form->{memory} || q{1G}|html %>" /></td>
				</tr>
				<tr style="background: #ccc;">
					<td><sup>*</sup>Processors:</td>
					<td>
						<select id="processors" name="processors">
%					for my $p (1, 2, 4, 8, 16) {
						<option value="<% $p |html %>" <% $p == $form->{processors} ? q{selected="selected"} : q{}%>><% $p %></option>
%					}
						</select>
					</td>
				</tr>
			</tbody>
				<& ./.comp/build_app_form, pm => $pm, app => $app, form => $form, flagged => $flagged &>
			<tr>
					<td></td>
					<td><input type="submit" value="Submit" /></td>
				</tr>
		</table>
		</form>
	</p>
	<pre style="float:left">
		<div>status: <% $st->{status} %> <% $st->{message} ? " Â» " . $st->{message} : "" %></div>
		<% Dumper($form) %>
	</pre>
% } else {
	No application found for conf file: 'CUFFLINKS'.
% }
</div>
%#-----------------------------------------------------------------
<%args>
	$pid => 0
</%args>
<%once>
	use Data::Dumper;
	use DNALC::Pipeline::Utils qw(clean_query);
	use DNALC::Pipeline::App::NGS::ProjectManager ();

	use DNALC::Pipeline::User ();

</%once>
<%init>

	$m->session->{pipeline} ||= {};
	my $s = $m->session->{pipeline};

	#my $path_info = $r->path_info;
	#if ($r->path_info =~ /\/(\d+)$/) {
	#	$pid = $1;
	#}

	my $apif = iPlant::FoundationalAPI->new(
			user => $s->{username},
			token => $s->{api_token},
			debug => 0,
		);
	my $pm = DNALC::Pipeline::App::NGS::ProjectManager->new({project => $pid, debug => 1});
	$pm->api_instance($apif) if $apif;
	my $proj = $pm->project;

	# project's owner
	my $is_owner = $s->{user_id} == $proj->user_id if $proj;

	my $app;
	my $st = $pm->app("NGS_CUFFLINKS");

	if ($st->{status} eq "success") {
		$app = $st->{app};
	}
	else {
		print STDERR $st->{status}, " ", $st->{message}, $/;
	}

	#my $app_inputs = $app->inputs if $app;
	#print STDERR "app_inputs = ", Dumper( $app_inputs ), $/;
	#my $app_params = $app->parameters if $app;

	my $form = {};
	my $flagged = {}; # to report errors

	if ( $r->method eq "POST") {
		$form = \%ARGS;
		
		$form->{jobName} =~ s|/+||g;
		
		for my $p (@{$app->parameters}) {
			if ($p->{hidden} && !defined $form->{$p->{id}}) {
				$form->{$p->{id}} = $p->{value} || $p->{defaultValue};
			}
			#if ($p->{id} eq "mate_inner_dist") {
			#	print STDERR "app_th: p = ", $p->{validator}, $/;
			#}
		}
		
		#print STDERR "app_cufflinks: form = ", Dumper( $form ), $/;
		
		# TODO - default input files should not be set?!
		#for my $p (@{$app->inputs}) {
		#	unless (defined $form->{$p->{id}}) {
		#		$form->{$p->{id}} = $p->{value};
		#	}
		#}
		
		# what do we do when we don`t get the paths?!
		$form->{BIAS_FASTA} = $pm->project_genome_path;
		$form->{ANNOTATION} = $pm->project_annotation_path;

		unless (defined $form->{archive}) {
            $form->{archive} = "true";
        }

		$st = $pm->submit_job('ngs_cufflinks', $app, $form);
		#print STDERR "app_cufflinks: JOB status = ", Dumper( $st ), $/;

		if ($st->{status} ne "success") {
			if ($st->{message} =~ /missing required/i && $st->{data} && %{$st->{data}}) {
				for (keys %{$st->{data}}) {
					$flagged->{$_} = 1;
				}
			}
		}
		else {
			if ($st->{data}) {
				# redirect to our job list page
				print STDERR "JOB ID: ", $st->{data}->id, "//", $st->{data}->api_job_id, $/;
				$m->comp('/_message_add', 'Job submitted!');
				$m->redirect("./cufflinks_list?pid=" . $pid);
			}
		}
	}
	else {
		for my $p (@{$app->parameters}) {
			unless ($p->{hidden}) {
				$form->{$p->{id}} = $p->{value} || $p->{defaultValue};
			}
		}
	}
</%init>
